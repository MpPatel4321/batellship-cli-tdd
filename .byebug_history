c
exception
n
c
output_data.include?('It is a draw')
output_data
c
batellship.methods
batellship.method
batellship.print_help
batellship
allow(batellship).to receive(:puts)
batellship.allow(batellship).to receive(:puts)
batellship.print_help
batellship
c
batellship.nil?(data)
batellship.nil?
batellship.nil
batellship.include?
batellship
batelliship
respond_to
response
batellship.methods
batellship.method
batellship.is_nil_data?(data)
batellship.is_nil_data?(data))
data
batellship
c
moves
positions
data_array
n
c
moves
positions
data_array
n
moves
positions
c
p2_battellfield
p1_battellfield
c
file = File.open(output_file, 'w')
file = FIle.open(output_file, 'w')
generate_output
output_file
c
OptionParser
c
params
c
batellship.run
c
batellship.run
batellship
ARGV.replace([valid_txt])
c
n
ARGV.clear
batellship.run
c
batellship.run
batellship
batellship.run
ARGV.replace([valid_txt])
c
ARGV.replace([valid_txt])
valid_txt
ARGV.replace
c
OpenStruct.new
c
test_time = OpenStruct.new(tv_sec: 123)
OpenStruct.new
c
self.instance_variables.gsub(&:('e', ''))
self.instance_variables.map(&:to_sym)
self.methods(false)
self.methods(false).map { |m| m.to_s.chomp('=').to_sym }
self.instance_variables.map(&:to_sym)
self.class.instance_method(:m).owner
self.class.instance_method(:run).owner
self.class.instance_method(:run)
:run.owner
self.class.instance_methods(true)
self.class.instance_methods(false)
self.class
self.instance_methods(false)
self.instance_variables.gsub(&:('e', ''))
'test'.gsub('e', '')
'test'.gsub('e')
'test'.sub('e')
self.instance_variables
c
__id__
__send__
self.instance_exec
self.instance_variables
self.instance_variables,
self.methods
self.methods.size
self
exit
data1
n
moves.include?("#{x},#{y}") ? 'X' : 'B'
positions.include?("#{x},#{y}")
x
y
c
y
x
c
x
c
y
x
c
x
c
x
c
x
c
x
c
x
c
x
c
x
c
x
data
c
data
x
c
x
c
x
c
data
c
moves.include?("#{x},#{y}") ? 'X' : 'B'
"#{x},#{y}"
positions.include?("#{x},#{y}")
x.to_s + ',' + y.to_s
y = 0
x
y
n
y
x
x.to_s + ',' + y.to_s
positions.include?("#{x},#{y}")
"#{x},#{y}"
moves
positions
c
data
n
data1
data
c
data1
c
data1
c
data1
c
data1
c
data1
c
data1
exit
c
data
n
data1
n
data1
n
data1
n
data1
n
data1
n
data1
data
n
data1
n
data1
n
data1
n
c
@p1_battellfield
c
a.split("\n")
a.split('\n')
a.split("\n")
a.class
a = File.read(input)
File.read(input)[2]
File.read(input)[1]
File.read(input)[0]
File.read(input).split('\n')
File.read(input)
File.open(input)
c
File.open("fixtures/input.txt")
File.open("./../fixtures/input.txt")
File.open("./../../fixtures/input.txt")
File.open(input)
input
